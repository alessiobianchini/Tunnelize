name: Tunnelize - publish package to npmjs

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  publish-npm:
    runs-on: ubuntu-latest
    environment: VARIABLES
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/
          always-auth: true

      - name: Log in to NPM
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Install dependencies
        working-directory: ./TunnelizeClient
        run: npm install

      - name: Get Latest Version
        run: |
          LATEST_VERSION=$(npm show tunnelize version)
          echo "Latest version: $LATEST_VERSION"
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Increment Version
        working-directory: ./TunnelizeClient
        run: |
          PATCH=$(echo $LATEST_VERSION | awk -F. '{print $3 + 1}')
          NEW_VERSION="${{ vars.MAJOR }}.${{ vars.MINOR }}.$PATCH"
          echo "New version: $NEW_VERSION"
          npm version $NEW_VERSION --no-git-tag-version
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Minify project files
        working-directory: ./TunnelizeClient
        run: npx terser ./src/tunnelize.js --output ./bin/tunnelize.js --compress --mangle

      - name: Publish to NPM
        working-directory: ./TunnelizeClient
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          DEV_TUNNEL_URL: "${{ secrets.DEV_TUNNEL_URL }}"
        run: npm publish --access public --no-git-checks
